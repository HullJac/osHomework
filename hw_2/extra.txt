/*
                if (command[0] != ' ' || command[0] != '\0' || command[0] != '\n') {
                        while (command[0] != ' ' || command[0] != '\0' || command[0] != '\n') {
                                if (first == 1) {
                                        write(1, cmd, 6);
                                        write(1, command, 1);
                                        first = 0;
                                        newWord = 0;
                                }
                                else {
                                        if (newWord == 1) {
                                                write(1, arg, 6);
                                                write(1, command, 1);
                                                newWord = 0;
                                        }
                                        else {
                                                write(1, command, 1);
                                        }
                                }
                                command++;
                        }
                write(1, &rbracket, 1);
                newWord = 1;
                }
                // Keep going until the next non space
                else {
                        command++;
                }
                */

char* combine(char* str1, char* str2) {
        int str1Len = strlen(str1);
        int str2Len = strlen(str2);
        int totalSize = str1Len + str2Len + 1;
        char* together = malloc(sizeof(char) * totalSize);
        strcpy(together, str1);
        strcat(together, str2);
        return together;
}

int numWords(char* str) {
        int len = strlen(str);
        int total = 0;
        int space = 0;
        int character = 0;
        for (int i = 0; i < len; i++) {
                if (str[i] == ' ' && space != 0) {

                }
                else if (str[i] == ' ' && space != 1) {

                }
        }

        return total;
}

f (getcwd(cwd, 256) == NULL) {
                        char* error =  strerror(errno);
                        int errorLength = strlen(error);
                        write(2, error, errorLength);
                        char nl = '\n';
                        write(1, &nl, 1);
                }
                else {
                        int pathLen = strlen(cwd);
                        write(1, &cwd, pathLen);
                        char dollar = '$';
                        write(1, &dollar, 1);
                }
                takeInput();


void takeInput() {
        read(0, inp, 256);
        int inputSize = strlen(inp);
        write(1, inp, inputSize);
        makeArgList(inp);
        debugargs(inp);

}

void debugargs(char* argList[]) {
        char* cmd = "cmd: [";
        char* arg = "arg: [";
        int length = strlen(command);
        char rbracket = ']';
        int first = 1;
        int newWord = 1;
        for (int i = 0; i < length; i++) {
                if (command[0] == ' ') {
                        command++;
                        newWord = 1;
                }
                else {
                        if (first == 1) {

                        }
                        else {

                        }
                        write(1, command, 1);
                }
        }
}


void print(char* str) {
        int len = strlen(str);
        write(1, str, len);
}

